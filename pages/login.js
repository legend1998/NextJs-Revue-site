import {
  getAuth,
  signInWithPopup,
  GoogleAuthProvider,
  signInWithEmailAndPassword,
} from "firebase/auth";
import { collection, getDocs, query, where } from "firebase/firestore";
import React, { useRef, useState } from "react";
import { buttons } from "../data/Repo";
import { firebasefb } from "../firebaseconfig";
import { useStateValue } from "../StateProvider";
import Link from "next/link";
import { useRouter } from "next/router";
import Head from "next/head";

function Loginpage() {
  let emailRef = useRef();
  let passRef = useRef();
  const navigate = useRouter();

  const [loading, setloading] = useState(false);

  const [{ user }, dispatch] = useStateValue();

  const signInByEmail = () => {
    if (emailRef.current.value.length < 10) return alert("enter valid email");
    if (passRef.current.value.length < 6) return alert("enter valid password");
    setloading(true);
    const auth = getAuth();
    signInWithEmailAndPassword(
      auth,
      emailRef.current.value,
      passRef.current.value
    )
      .then((res) => {
        const user = res.user;
        console.log(user, "this is login user");
        const q = query(
          collection(firebasefb, "user"),
          where("email", "==", user.email)
        );
        getDocs(q)
          .then((docu) => {
            const userData = docu.docs[0].data();
            dispatch({
              type: "SET_USER",
              user: userData,
            });

            navigate.replace("/profile");
          })
          .catch((err) => {
            setloading(false);
          });
      })
      .catch((err) => {
        alert(err);
        setloading(false);
        auth.signOut();
      });
  };

  const signinNow = () => {
    if (loading) return;
    // if (emailRef.current.value.length < 10) return alert("enter valid email");
    // if (passRef.current.value.length < 8) return alert("enter valid password");
    const auth = getAuth();
    const provider = new GoogleAuthProvider();
    signInWithPopup(auth, provider)
      .then(async (result) => {
        // This gives you a Google Access Token. You can use it to access the Google API.
        // const credential = GoogleAuthProvider.credentialFromResult(result);
        // const token = credential.accessToken;
        // The signed-in user info.
        const user = result.user;
        if (user) {
          let results;
          console.log("calling query");
          const q = query(
            collection(firebasefb, "user"),
            where("email", "==", user.email)
          );
          const querySnapshot = await getDocs(q);
          results = querySnapshot.docs[0].data();

          console.log("inside auth results", results);

          dispatch({ type: "SET_USER", user: results });
          setloading(false);
          console.log("inside auth navigating to home");

          navigate.replace("/profile");
          console.log("wokring login ");
        } else {
          setloading(false);
          alert("bad request");
        }
        // ...
      })
      .catch((error) => {
        // Handle Errors here.
        // ...
      });
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link
          href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap"
          rel="stylesheet"
        />
        <script
          src="https://kit.fontawesome.com/5039367dbf.js"
          crossorigin="anonymous"
        ></script>
      </Head>
      <main>
        <div className=" bg-gray-100   h-screen  text-black flex">
          <div className=" flex flex-1 justify-center items-center ">
            <div className="  flex flex-col items-center  ">
              <h1 className=" text-gray-800 text-4xl font-bold ">
                Welcome Back!
              </h1>
              <p className=" text-gray-00 py-4 text-xl ">
                We Are Happy To Have You Back
              </p>
              <div className=" flex flex-col w-full ">
                <div className="  ">
                  <input
                    type="email "
                    ref={emailRef}
                    placeholder="Email Address"
                    className="block my-2 text-sm h-10 px-4 rounded-lg w-full border outline-none text-black    "
                  />

                  <input
                    type="password"
                    ref={passRef}
                    placeholder="Password"
                    className="block text-sm py-3 px-4 rounded-lg w-full border outline-none text-black"
                  />
                  <Link href="/forgotPassword">
                    <p className=" text-gray-800 flex justify-end cursor-pointer pr-2 ">
                      Forgot password ?
                    </p>
                  </Link>
                </div>

                <div className=" pl-16 pr-16 py-7 text-white">
                  <button
                    className={buttons.loginButton}
                    onClick={() => signInByEmail()}
                  >
                    Login
                    {loading ? (
                      <i className="fas fa-spinner px-2 animate-spin"></i>
                    ) : null}
                  </button>
                </div>

                <span className="flex items-center justify-center space-x-2 py-4">
                  <span className="h-px bg-gray-400 w-40 "></span>
                  <span className="font-normal text-gray-500">or </span>
                  <span className="h-px bg-gray-400 w-40 "></span>
                </span>
                <div className="flex justify-center gap-14 my-8">
                  <button className="px-4 py-2 bg-white  rounded-md hover:shadow-lg shadow-sm">
                    <i
                      onClick={() => signinNow()}
                      class="fab fa-google text-red-500 text-2xl "
                    ></i>
                  </button>
                  <button className="px-4 py-2 bg-white  rounded-md hover:shadow-lg  shadow-sm">
                    <i class="fab fa-linkedin  text-blue-500 text-2xl"></i>
                  </button>
                  <button className="px-4 py-2 bg-white rounded-md hover:shadow-lg  shadow-sm">
                    <i class="fab fa-facebook-f text-blue-700 text-2xl"></i>
                  </button>
                </div>
              </div>
            </div>
          </div>
          <div className="  flex-1  p-10 flex justify-center ">
            <div className=" bg-white shadow-sm rounded-xl  p-10 shadow-black flex items-center flex-col justify-center">
              <div className="  flex  justify-center ">
                <img src="/loginpageimg.svg" alt="" className="h-40" />
              </div>
              <div className=" flex flex-col items-center ">
                <h1 className=" text-2xl py-4 text-gray-900 font-bold ">
                  Dont't Have An Account ?
                </h1>
                <p className=" text-xl text-gray-700 pt-3">
                  Get Started By Creating Your New Account
                </p>
                <Link href="/signup">
                  <button
                    className=" text-gray-700 px-3 py-2 my-3  rounded-md tracking-wide border border-purple-700 text-xl
                                  font-semibold font-display  hover:shadow-md
                                  "
                  >
                    Register
                  </button>
                </Link>
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
export default Loginpage;
