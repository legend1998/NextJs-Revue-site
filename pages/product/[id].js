import {
  collection,
  doc,
  getDoc,
  getDocs,
  query,
  where,
} from "firebase/firestore";
import { React, useEffect, useState } from "react";
import { firebasefb } from "../../firebaseconfig";
import ReviewCard from "../../components/ReviewCard";
import HomeLayout from "../../layouts/HomeLayout";
import { useRouter } from "next/router";
import Head from "next/head";

function Product() {
  const [prodata, setprodata] = useState(null);
  const [loaded, setloaded] = useState(false);
  const [loading, setloading] = useState(true);
  const [reviews, setreviews] = useState([]);
  const [topreviews, settopreviews] = useState([]);
  const navigate = useRouter();
  const { id } = navigate.query;

  useEffect(() => {
    if (loaded) return;
    setloaded(true);

    const getProduct = new Promise((resolve) => {
      getDoc(doc(firebasefb, "product", id)).then((res) => {
        console.log(res.data());
        setprodata(res.data());
        return resolve();
      });
    });

    const getProductReview = new Promise((resolve) => {
      const q = query(
        collection(firebasefb, "review"),
        where("bpsId", "==", id)
      );
      getDocs(q).then((res) => {
        var a = [],
          prosArr = [];
        res.forEach((pro) => {
          const proData = pro.data();
          a.push(proData);
          if (prosArr.length <= 9) prosArr.push(proData.id);
        });
        setreviews(a);
        return resolve(prosArr);
      });
    }, []);

    Promise.all([getProductReview, getProduct]).then((res) => {
      setloading(false);
    });
  });

  if (loading)
    return (
      <div className="h-screen flex items-center justify-center">
        <i className="fas fa-spinner animate-spin"></i>
      </div>
    );
  else
    return (
      <>
        <Head>
          <title>MyRevue - </title>
          <meta name="description" content="Generated by create next app" />
          <link
            href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap"
            rel="stylesheet"
          />
          <script
            src="https://kit.fontawesome.com/5039367dbf.js"
            crossorigin="anonymous"
          ></script>
        </Head>
        <main>
          <div className="  mt-6">
            <div className="flex justify-between items-center">
              <div className=" flex items-center">
                <img
                  className=" w-16 mr-6 rounded-full"
                  src={prodata.imageUrl}
                  alt=""
                />
                <h1 className=" text-5xl">{prodata.name}</h1>
              </div>
              <div className="flex items-center">
                <div className="flex flex-col items-center mr-10">
                  <p className=" text-xs">RATING</p>
                  <div className="flex items-center">
                    <div>
                      <p className=" font-semibold text-xl">
                        {Array.from(Array(prodata.rating)).map((_, index) => (
                          <i
                            key={index}
                            class="fas fa-star px-1 text-purple-700"
                          ></i>
                        ))}
                        {Array.from(Array(5 - prodata.rating)).map(
                          (_, index) => (
                            <i key={index} class="fas fa-star px-1"></i>
                          )
                        )}
                      </p>
                    </div>
                  </div>
                </div>
                <button className="mr-8 bg-purple-700 px-4 py-2 rounded-md  ">
                  <i class="far fa-heart text-2xl text-white"></i>
                </button>

                <i className="fas fa-share-alt text-3xl cursor-pointer text-blue-500"></i>
              </div>
            </div>
            {/* banner */}
            <div className=" rounded-md h-80 overflow-hidden bg-purple-800 my-4 flex justify-center items-center ">
              <img className="w-96" src={prodata.imageUrl} alt="" />
            </div>

            {/* tag */}
            <ul className="px-4 mb-8 flex">
              {prodata.filter.map((filt, index) => (
                <li
                  key={index}
                  className=" mr-2 px-3 py-[2px] border-2 border-gray-700 rounded-2xl font-light text-sm"
                >
                  {filt}
                </li>
              ))}
            </ul>

            {/* description */}
            <div className=" mb-10 ">
              <h1 className=" text-2xl py-3">Description</h1>
              <p className=" font-light">{prodata.description}</p>
            </div>

            {/* top reviews */}
            <div className="mb-10 bg-white bg-opacity-10 p-6 rounded-lg ">
              <h1 className="text-4xl font-bold mb-8">Top Reviews</h1>
              <div className="grid grid-cols-5 gap-10">
                {topreviews.map((revs, index) => (
                  <ReviewCard key={index} review={revs} />
                ))}
              </div>
            </div>

            {/* All reviews */}
            <div className="mb-10 bg-white bg-opacity-10 p-6 rounded-lg ">
              <h1 className="text-4xl font-bold mb-8">All Reviews</h1>
              <div className="grid grid-cols-5 gap-10">
                {reviews.map((revs, index) => (
                  <ReviewCard key={index} review={revs} />
                ))}
              </div>
            </div>
          </div>{" "}
        </main>
      </>
    );
}

Product.layout = HomeLayout;
export default Product;
